[{"path":"https://vsritter.github.io/MRThreshold/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 MRThreshold authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vsritter.github.io/MRThreshold/articles/microrandomization_setup.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"4T Sustainability Microrandomized Trial","text":"TIRij=β0+γi+β1Trtij+β2Timeij+β3TrtijTimej+eij, TIR_{ij} = \\beta_0 + \\gamma_i + \\beta_1 Trt_{ij} + \\beta_2 Time_{ij} + \\beta_3 Trt_{ij} Time_j + e_{ij}, γi∼N(0,σγ2),eij∼N(0,σe2),γi⊥eij \\gamma_i \\sim N(0, \\sigma_\\gamma^2), \\quad e_{ij} \\sim N(0, \\sigma_e^2), \\quad \\gamma_i \\perp e_{ij} Also, β1=0\\beta_1 = 0 since, baseline, treatment effect zero. correlation two TIRs patient given ρ=Cor(TIRij,TIRij′)=(1+(σe/σγ)2)−1. \\rho = Cor(TIR_{ij}, TIR_{ij'}) = (1 + (\\sigma_e/\\sigma_\\gamma)^2)^{-1}. simulated scenarios, fixed σe/σγ=0.5\\sigma_e/\\sigma_\\gamma = 0.5, ρ=0.8\\rho = 0.8. Also, assume baseline TIR microrandomization β0=0.75\\beta_0 = 0.75 baseline time trend β2=−0.005\\beta_2 = -0.005 patients get progressively worse TIR intervened. Thus, using sample sizes 25, 50, 100, 200, simulate TIRij=.75+γi−0.005Timeij+β3TrtijTimej+eij, TIR_{ij} = .75 + \\gamma_i - 0.005 Time_{ij} + \\beta_3 Trt_{ij} Time_j + e_{ij}, following scenarios Scenarios A1-A5 β1=0.005,0.0025,0.001,0.0005,0.0001\\beta_1 = 0.005, 0.0025, 0.001, 0.0005, 0.0001 σe=0.1\\sigma_e = 0.1 σγ=0.2\\sigma_\\gamma = 0.2 Scenarios B1-B5 β1=0.005,0.0025,0.001,0.0005,0.0001\\beta_1 = 0.005, 0.0025, 0.001, 0.0005, 0.0001 σe=0.08\\sigma_e = 0.08 σγ=0.16\\sigma_\\gamma = 0.16 Scenarios C1-C2 β1=0\\beta_1 = 0 C1: σe=0.1\\sigma_e = 0.1 σγ=0.2\\sigma_\\gamma = 0.2 C2: σe=0.08\\sigma_e = 0.08 σγ=0.16\\sigma_\\gamma = 0.16 @fig-rct data non-microrandomized sample size 100, .e., patients simply randomized default add-treatment baseline. data randomized (single randomization baseline, microrandomized) sample 100 patients.","code":""},{"path":"https://vsritter.github.io/MRThreshold/articles/microrandomization_setup.html","id":"simulation-results","dir":"Articles","previous_headings":"","what":"Simulation results","title":"4T Sustainability Microrandomized Trial","text":"results obtained using B=2000B = 2000 replications scenarios described . average number participants risk add-treatment provided study weeks","code":""},{"path":"https://vsritter.github.io/MRThreshold/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Victor Ritter. Author, maintainer. Bryan Bunning. Author, contributor. Manisha Desai. Author, contributor.","code":""},{"path":"https://vsritter.github.io/MRThreshold/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ritter V, Bunning B, Desai M (2025). MRThreshold: Simulate microransomized trials capacity threshold. R package version 0.0.0.9000, https://vsritter.github.io/MRThreshold/, https://github.com/vsritter/MRThreshold.","code":"@Manual{,   title = {MRThreshold: Simulate microransomized trials with a capacity threshold},   author = {Victor Ritter and Bryan Bunning and Manisha Desai},   year = {2025},   note = {R package version 0.0.0.9000, https://vsritter.github.io/MRThreshold/},   url = {https://github.com/vsritter/MRThreshold}, }"},{"path":"https://vsritter.github.io/MRThreshold/index.html","id":"mrthreshold","dir":"","previous_headings":"","what":"Simulate microransomized trials with a capacity threshold","title":"Simulate microransomized trials with a capacity threshold","text":"goal MRThreshold simulate microrandomized trials subject capacity constrain.","code":""},{"path":"https://vsritter.github.io/MRThreshold/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate microransomized trials with a capacity threshold","text":"can install development version MRThreshold GitHub :","code":"# install.packages(\"pak\") pak::pak(\"vsritter/MRThreshold\")"},{"path":"https://vsritter.github.io/MRThreshold/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Simulate microransomized trials with a capacity threshold","text":"simulate trajectory 100 patients subject capacity 5 (see example model specification 4T Sustainability Microrandomized Trial) , users can compute relevant metrics designing study, e.g., bias, empirical standard error, coverage probability, power.","code":"library(MRThreshold)  RNGkind(\"L'Ecuyer-CMRG\") set.seed(365342)  sim_list <- sim_microrand(N = 100, capacity = 5) sim_list #> $lmer_reg #> # A tibble: 43 × 13 #>    sample_size set       b3 up_to_time n_clust n_obs effect term     estimate #>          <dbl> <chr>  <dbl>      <dbl>   <int> <int> <chr>  <chr>       <dbl> #>  1         100 A1    0.005          16      14    19 fixed  time:trt 0.00815  #>  2         100 A2    0.0025         16      15    21 fixed  time:trt 0.000673 #>  3         100 A3    0.001          16      14    22 fixed  time:trt 0.000123 #>  4         100 A4    0.0005         16      10    19 fixed  time:trt 0.00214  #>  5         100 A5    0.0001         16      11    19 fixed  time:trt 0.00211  #>  6         100 B5    0.0001         16       6     9 fixed  time:trt 0.00497  #>  7         100 C1    0              16      10    14 fixed  time:trt 0.00373  #>  8         100 A1    0.005          24      41    72 fixed  time:trt 0.00600  #>  9         100 A2    0.0025         24      47    80 fixed  time:trt 0.00298  #> 10         100 A3    0.001          24      42    85 fixed  time:trt 0.000937 #> # ℹ 33 more rows #> # ℹ 4 more variables: std.error <dbl>, statistic <dbl>, df <dbl>, p.value <dbl> #>  #> $summary #> # A tibble: 345 × 6 #>    sample_size set    time Addon Default atRisk #>          <dbl> <chr> <dbl> <dbl>   <dbl>  <dbl> #>  1         100 A1        6     1       0      1 #>  2         100 A1       10     1       1      2 #>  3         100 A1       11     0       2      2 #>  4         100 A1       12     0       1      1 #>  5         100 A1       13     1       2      3 #>  6         100 A1       14     1       1      2 #>  7         100 A1       15     5       2      7 #>  8         100 A1       16     1       0      1 #>  9         100 A1       17     3       2      5 #> 10         100 A1       18     2       2      4 #> # ℹ 335 more rows # compute metrics dt_res <- sim_list$lmer_reg %>%    group_by(sample_size, set, up_to_time) %>%    mutate(bias = estimate - b3,          mse = bias^2,          empirical_stderr = estimate - mean(estimate, na.rm = T),          prop_rej = as.numeric(p.value < 0.05),          ll = estimate - 1.96*std.error,          ul = estimate + 1.96*std.error,          cover = as.numeric((ll <= b3)*(b3 <= ul))) %>%    summarise(across(c(n_obs, n_clust, bias, empirical_stderr, mse, cover, prop_rej),                    ~ mean(., na.rm = T)), .groups = 'drop')  dt_res #> # A tibble: 43 × 10 #>    sample_size set   up_to_time n_obs n_clust      bias empirical_stderr     mse #>          <dbl> <chr>      <dbl> <dbl>   <dbl>     <dbl>            <dbl>   <dbl> #>  1         100 A1            16    19      14   3.15e-3                0 9.93e-6 #>  2         100 A1            24    72      41   9.96e-4                0 9.92e-7 #>  3         100 A1            32   166      76   3.43e-4                0 1.18e-7 #>  4         100 A1            40   281      94   1.46e-4                0 2.13e-8 #>  5         100 A2            16    21      15  -1.83e-3                0 3.34e-6 #>  6         100 A2            24    80      47   4.84e-4                0 2.34e-7 #>  7         100 A2            32   195      81  -5.56e-4                0 3.09e-7 #>  8         100 A2            40   325      93  -1.84e-4                0 3.38e-8 #>  9         100 A3            16    22      14  -8.77e-4                0 7.70e-7 #> 10         100 A3            24    85      42  -6.35e-5                0 4.03e-9 #> # ℹ 33 more rows #> # ℹ 2 more variables: cover <dbl>, prop_rej <dbl>"},{"path":"https://vsritter.github.io/MRThreshold/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vsritter.github.io/MRThreshold/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/sim_microrand.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sim_microrand","title":"Title — sim_microrand","text":"Title","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/sim_microrand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sim_microrand","text":"","code":"sim_microrand(N, capacity = Inf, return_dt_sim = FALSE)"},{"path":"https://vsritter.github.io/MRThreshold/reference/sim_microrand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sim_microrand","text":"return_dt_sim","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/skip.seed.streams.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — skip.seed.streams","title":"Title — skip.seed.streams","text":"Title","code":""},{"path":"https://vsritter.github.io/MRThreshold/reference/skip.seed.streams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — skip.seed.streams","text":"","code":"skip.seed.streams(n)"},{"path":"https://vsritter.github.io/MRThreshold/reference/skip.seed.streams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — skip.seed.streams","text":"n","code":""}]
